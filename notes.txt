=> App component is the 'Root' component for the application.

=> Any text has to be inside the Text component, unlike web.

=> Styling in react native is inspired by css, that is, it is relatable to css, but many things are different.

=> Using StyleSheet object is helpful in 2 ways.
  1. Auto completion
  2. Provides validation (if you use invalid style/properties -> error)

=> Components have flexbox enabled by default, unlike web.

=> Flex
  1. Main axis
    - row = left to right
    - column = top to bottom
    - row-reverse = right to left
    - column-reverse = bottom to top
    - justifyContent (Can't use stretch here, so go to children components to specify "how much space it should take of the space it can get along the main axis")

  2. Cross axis
    - the other axis
    - alignItems (default is 'stretch')

=> Event Handling - Similar to web

=> Sometimes there can be a difference between android and ios for styling.
  - View is a more general component than Text.

=> Unlike web, styles do not cascade (tranferring of style to children eg. color)

=> The space taken up by ScrollView is decided by its parent container
  - Quite a lot of props for customization, see docs
  - ScrollView renders all of its children, doesn't matter if they're visible or not

=> FlatList solves this all rendering issue
  - Giving objects as items is a must
  - if you have a key attribute in this object, the key for list is extracted automatically by FlatList
  - else we can use keyExtractor prop to define the key

=> Pressed - modern version for all the touchable variants
  - Ripple effect in iOS has to be done manually by passing func to style

=> Styling overall bg of a modal -> do it in the nested View

=> react-devtools is helpful